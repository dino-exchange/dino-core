{
  "address": "0xB2432c3a49A732d031EDa201E2d28d763230b269",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "_oracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_adminAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operatorAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_intervalBlocks",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_bufferBlocks",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minBetAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_oracleUpdateAllowance",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "currentEpoch",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BetBear",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "currentEpoch",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BetBull",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "currentEpoch",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Claim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ClaimTreasury",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "epoch",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "price",
          "type": "int256"
        }
      ],
      "name": "EndRound",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "epoch",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "price",
          "type": "int256"
        }
      ],
      "name": "LockRound",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "epoch",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minBetAmount",
          "type": "uint256"
        }
      ],
      "name": "MinBetAmountUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "epoch",
          "type": "uint256"
        }
      ],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "epoch",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "treasuryRate",
          "type": "uint256"
        }
      ],
      "name": "RatesUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "epoch",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardBaseCalAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "treasuryAmount",
          "type": "uint256"
        }
      ],
      "name": "RewardsCalculated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "epoch",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "StartRound",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "epoch",
          "type": "uint256"
        }
      ],
      "name": "Unpause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "TOTAL_RATE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "adminAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "betBear",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "betBull",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bufferBlocks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "epoch",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "epoch",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "claimable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentPriceFromOracle",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "executeRound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "genesisLockOnce",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "genesisLockRound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "genesisStartOnce",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "genesisStartRound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "cursor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        }
      ],
      "name": "getUserRounds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "intervalBlocks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ledger",
      "outputs": [
        {
          "internalType": "enum BnbPricePrediction.Position",
          "name": "position",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "claimed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minBetAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operatorAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracleLatestRoundId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracleUpdateAllowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "epoch",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "refundable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rounds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "epoch",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lockBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "lockPrice",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "closePrice",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bullAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bearAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardBaseCalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "oracleCalled",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_adminAddress",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bufferBlocks",
          "type": "uint256"
        }
      ],
      "name": "setBufferBlocks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_intervalBlocks",
          "type": "uint256"
        }
      ],
      "name": "setIntervalBlocks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minBetAmount",
          "type": "uint256"
        }
      ],
      "name": "setMinBetAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operatorAddress",
          "type": "address"
        }
      ],
      "name": "setOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "setOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_oracleUpdateAllowance",
          "type": "uint256"
        }
      ],
      "name": "setOracleUpdateAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rewardRate",
          "type": "uint256"
        }
      ],
      "name": "setRewardRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_treasuryRate",
          "type": "uint256"
        }
      ],
      "name": "setTreasuryRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shouldExecuteRound",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasuryAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasuryRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userRounds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x01fb2c5156a62c93694dc12c62d9a50e2beca50dcf95d506436e568db61cf23d",
  "receipt": {
    "to": null,
    "from": "0x4C37848BC193995a3Cdf280919a42bD899464a2D",
    "contractAddress": "0xB2432c3a49A732d031EDa201E2d28d763230b269",
    "transactionIndex": 1,
    "gasUsed": "3278258",
    "logsBloom": "0x
    "blockHash": "0xa8a51c42582314e8c52cf5b0cbb10210b4285a65714cd30b189b603ae871dfef",
    "transactionHash": "0x01fb2c5156a62c93694dc12c62d9a50e2beca50dcf95d506436e568db61cf23d",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 10580311,
        "transactionHash": "0x01fb2c5156a62c93694dc12c62d9a50e2beca50dcf95d506436e568db61cf23d",
        "address": "0xB2432c3a49A732d031EDa201E2d28d763230b269",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000004c37848bc193995a3cdf280919a42bd899464a2d"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xa8a51c42582314e8c52cf5b0cbb10210b4285a65714cd30b189b603ae871dfef"
      }
    ],
    "blockNumber": 10580311,
    "cumulativeGasUsed": "3305537",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x2514895c72f50D8bd4B4F9b1110F0D6bD2c97526",
    "0x4C37848BC193995a3Cdf280919a42bD899464a2D",
    "0x4C37848BC193995a3Cdf280919a42bD899464a2D",
    100,
    50,
    1000000000000000,
    300
  ],
  "solcInputHash": "bb7d7a6d05e0e366cf189b9339297d95",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_adminAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operatorAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_intervalBlocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bufferBlocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minBetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_oracleUpdateAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"currentEpoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BetBear\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"currentEpoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BetBull\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"currentEpoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimTreasury\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"}],\"name\":\"EndRound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"}],\"name\":\"LockRound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minBetAmount\",\"type\":\"uint256\"}],\"name\":\"MinBetAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"}],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"treasuryRate\",\"type\":\"uint256\"}],\"name\":\"RatesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardBaseCalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"treasuryAmount\",\"type\":\"uint256\"}],\"name\":\"RewardsCalculated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"StartRound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"}],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TOTAL_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adminAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"betBear\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"betBull\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bufferBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"claimable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentPriceFromOracle\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executeRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"genesisLockOnce\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"genesisLockRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"genesisStartOnce\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"genesisStartRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cursor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"getUserRounds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"intervalBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ledger\",\"outputs\":[{\"internalType\":\"enum BnbPricePrediction.Position\",\"name\":\"position\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"claimed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minBetAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleLatestRoundId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleUpdateAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"refundable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rounds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"lockPrice\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"closePrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bullAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bearAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardBaseCalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"oracleCalled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adminAddress\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bufferBlocks\",\"type\":\"uint256\"}],\"name\":\"setBufferBlocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_intervalBlocks\",\"type\":\"uint256\"}],\"name\":\"setIntervalBlocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minBetAmount\",\"type\":\"uint256\"}],\"name\":\"setMinBetAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operatorAddress\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"setOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_oracleUpdateAllowance\",\"type\":\"uint256\"}],\"name\":\"setOracleUpdateAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardRate\",\"type\":\"uint256\"}],\"name\":\"setRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_treasuryRate\",\"type\":\"uint256\"}],\"name\":\"setTreasuryRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldExecuteRound\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userRounds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"betBear()\":{\"details\":\"Bet bear position\"},\"betBull()\":{\"details\":\"Bet bull position\"},\"claim(uint256)\":{\"details\":\"Claim reward\"},\"claimTreasury()\":{\"details\":\"Claim all rewards in treasury callable by admin\"},\"claimable(uint256,address)\":{\"details\":\"Get the claimable stats of specific epoch and user account\"},\"executeRound()\":{\"details\":\"Start the next round n, lock price for round n-1, end round n-2\"},\"genesisLockRound()\":{\"details\":\"Lock genesis round\"},\"genesisStartRound()\":{\"details\":\"Start genesis round\"},\"getUserRounds(address,uint256,uint256)\":{\"details\":\"Return round epochs that a user has participated\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"called by the admin to pause, triggers stopped state\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"refundable(uint256,address)\":{\"details\":\"Get the refundable stats of specific epoch and user account\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAdmin(address)\":{\"details\":\"set admin address callable by owner\"},\"setBufferBlocks(uint256)\":{\"details\":\"set buffer blocks callable by admin\"},\"setIntervalBlocks(uint256)\":{\"details\":\"set interval blocks callable by admin\"},\"setMinBetAmount(uint256)\":{\"details\":\"set minBetAmount callable by admin\"},\"setOperator(address)\":{\"details\":\"set operator address callable by admin\"},\"setOracle(address)\":{\"details\":\"set Oracle address callable by admin\"},\"setOracleUpdateAllowance(uint256)\":{\"details\":\"set oracle update allowance callable by admin\"},\"setRewardRate(uint256)\":{\"details\":\"set reward rate callable by admin\"},\"setTreasuryRate(uint256)\":{\"details\":\"set treasury rate callable by admin\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"called by the admin to unpause, returns to normal state Reset genesis state. Once paused, the rounds would need to be kickstarted by genesis\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BnbPricePrediction.sol\":\"BnbPricePrediction\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BnbPricePrediction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity =0.6.12;\\n\\nimport './libraries/SafeMath.sol';\\nimport './libraries/Ownable.sol';\\nimport './libraries/Pausable.sol';\\n\\ninterface AggregatorV3Interface {\\n    function decimals() external view returns (uint8);\\n\\n    function description() external view returns (string memory);\\n\\n    function version() external view returns (uint256);\\n\\n    // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n    // if they do not have data to report, instead of returning unset values\\n    // which could be misinterpreted as actual reported values.\\n    function getRoundData(uint80 _roundId)\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n}\\n\\ncontract BnbPricePrediction is Ownable, Pausable {\\n    using SafeMath for uint256;\\n\\n    struct Round {\\n        uint256 epoch;\\n        uint256 startBlock;\\n        uint256 lockBlock;\\n        uint256 endBlock;\\n        int256 lockPrice;\\n        int256 closePrice;\\n        uint256 totalAmount;\\n        uint256 bullAmount;\\n        uint256 bearAmount;\\n        uint256 rewardBaseCalAmount;\\n        uint256 rewardAmount;\\n        bool oracleCalled;\\n    }\\n\\n    enum Position {Bull, Bear}\\n\\n    struct BetInfo {\\n        Position position;\\n        uint256 amount;\\n        bool claimed; // default false\\n    }\\n\\n    mapping(uint256 => Round) public rounds;\\n    mapping(uint256 => mapping(address => BetInfo)) public ledger;\\n    mapping(address => uint256[]) public userRounds;\\n    uint256 public currentEpoch;\\n    uint256 public intervalBlocks;\\n    uint256 public bufferBlocks;\\n    address public adminAddress;\\n    address public operatorAddress;\\n    uint256 public treasuryAmount;\\n    AggregatorV3Interface internal oracle;\\n    uint256 public oracleLatestRoundId;\\n\\n    uint256 public constant TOTAL_RATE = 100; // 100%\\n    uint256 public rewardRate = 90; // 90%\\n    uint256 public treasuryRate = 10; // 10%\\n    uint256 public minBetAmount;\\n    uint256 public oracleUpdateAllowance; // seconds\\n\\n    bool public genesisStartOnce = false;\\n    bool public genesisLockOnce = false;\\n\\n    event StartRound(uint256 indexed epoch, uint256 blockNumber);\\n    event LockRound(uint256 indexed epoch, uint256 blockNumber, int256 price);\\n    event EndRound(uint256 indexed epoch, uint256 blockNumber, int256 price);\\n    event BetBull(address indexed sender, uint256 indexed currentEpoch, uint256 amount);\\n    event BetBear(address indexed sender, uint256 indexed currentEpoch, uint256 amount);\\n    event Claim(address indexed sender, uint256 indexed currentEpoch, uint256 amount);\\n    event ClaimTreasury(uint256 amount);\\n    event RatesUpdated(uint256 indexed epoch, uint256 rewardRate, uint256 treasuryRate);\\n    event MinBetAmountUpdated(uint256 indexed epoch, uint256 minBetAmount);\\n    event RewardsCalculated(\\n        uint256 indexed epoch,\\n        uint256 rewardBaseCalAmount,\\n        uint256 rewardAmount,\\n        uint256 treasuryAmount\\n    );\\n    event Pause(uint256 epoch);\\n    event Unpause(uint256 epoch);\\n\\n    constructor(\\n        AggregatorV3Interface _oracle,\\n        address _adminAddress,\\n        address _operatorAddress,\\n        uint256 _intervalBlocks,\\n        uint256 _bufferBlocks,\\n        uint256 _minBetAmount,\\n        uint256 _oracleUpdateAllowance\\n    ) public {\\n        oracle = _oracle;\\n        adminAddress = _adminAddress;\\n        operatorAddress = _operatorAddress;\\n        intervalBlocks = _intervalBlocks;\\n        bufferBlocks = _bufferBlocks;\\n        minBetAmount = _minBetAmount;\\n        oracleUpdateAllowance = _oracleUpdateAllowance;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == adminAddress, 'admin: wut?');\\n        _;\\n    }\\n\\n    modifier onlyOperator() {\\n        require(msg.sender == operatorAddress, 'operator: wut?');\\n        _;\\n    }\\n\\n    modifier onlyAdminOrOperator() {\\n        require(msg.sender == adminAddress || msg.sender == operatorAddress, 'admin | operator: wut?');\\n        _;\\n    }\\n\\n    modifier notContract() {\\n        require(!_isContract(msg.sender), 'contract not allowed');\\n        require(msg.sender == tx.origin, 'proxy contract not allowed');\\n        _;\\n    }\\n\\n    /**\\n     * @dev set admin address\\n     * callable by owner\\n     */\\n    function setAdmin(address _adminAddress) external onlyOwner {\\n        require(_adminAddress != address(0), 'Cannot be zero address');\\n        adminAddress = _adminAddress;\\n    }\\n\\n    /**\\n     * @dev set operator address\\n     * callable by admin\\n     */\\n    function setOperator(address _operatorAddress) external onlyAdmin {\\n        require(_operatorAddress != address(0), 'Cannot be zero address');\\n        operatorAddress = _operatorAddress;\\n    }\\n\\n    /**\\n     * @dev set interval blocks\\n     * callable by admin\\n     */\\n    function setIntervalBlocks(uint256 _intervalBlocks) external onlyAdmin {\\n        intervalBlocks = _intervalBlocks;\\n    }\\n\\n    /**\\n     * @dev set buffer blocks\\n     * callable by admin\\n     */\\n    function setBufferBlocks(uint256 _bufferBlocks) external onlyAdmin {\\n        require(_bufferBlocks <= intervalBlocks, 'Cannot be more than intervalBlocks');\\n        bufferBlocks = _bufferBlocks;\\n    }\\n\\n    /**\\n     * @dev set Oracle address\\n     * callable by admin\\n     */\\n    function setOracle(address _oracle) external onlyAdmin {\\n        require(_oracle != address(0), 'Cannot be zero address');\\n        oracle = AggregatorV3Interface(_oracle);\\n    }\\n\\n    /**\\n     * @dev set oracle update allowance\\n     * callable by admin\\n     */\\n    function setOracleUpdateAllowance(uint256 _oracleUpdateAllowance) external onlyAdmin {\\n        oracleUpdateAllowance = _oracleUpdateAllowance;\\n    }\\n\\n    /**\\n     * @dev set reward rate\\n     * callable by admin\\n     */\\n    function setRewardRate(uint256 _rewardRate) external onlyAdmin {\\n        require(_rewardRate <= TOTAL_RATE, 'rewardRate cannot be more than 100%');\\n        rewardRate = _rewardRate;\\n        treasuryRate = TOTAL_RATE.sub(_rewardRate);\\n\\n        emit RatesUpdated(currentEpoch, rewardRate, treasuryRate);\\n    }\\n\\n    /**\\n     * @dev set treasury rate\\n     * callable by admin\\n     */\\n    function setTreasuryRate(uint256 _treasuryRate) external onlyAdmin {\\n        require(_treasuryRate <= TOTAL_RATE, 'treasuryRate cannot be more than 100%');\\n        rewardRate = TOTAL_RATE.sub(_treasuryRate);\\n        treasuryRate = _treasuryRate;\\n\\n        emit RatesUpdated(currentEpoch, rewardRate, treasuryRate);\\n    }\\n\\n    /**\\n     * @dev set minBetAmount\\n     * callable by admin\\n     */\\n    function setMinBetAmount(uint256 _minBetAmount) external onlyAdmin {\\n        minBetAmount = _minBetAmount;\\n\\n        emit MinBetAmountUpdated(currentEpoch, minBetAmount);\\n    }\\n\\n    /**\\n     * @dev Start genesis round\\n     */\\n    function genesisStartRound() external onlyOperator whenNotPaused {\\n        require(!genesisStartOnce, 'Can only run genesisStartRound once');\\n\\n        currentEpoch = currentEpoch + 1;\\n        _startRound(currentEpoch);\\n        genesisStartOnce = true;\\n    }\\n\\n    /**\\n     * @dev Lock genesis round\\n     */\\n    function genesisLockRound() external onlyOperator whenNotPaused {\\n        require(genesisStartOnce, 'Can only run after genesisStartRound is triggered');\\n        require(!genesisLockOnce, 'Can only run genesisLockRound once');\\n        require(\\n            block.number <= rounds[currentEpoch].lockBlock.add(bufferBlocks),\\n            'Can only lock round within bufferBlocks'\\n        );\\n\\n        int256 currentPrice = _getPriceFromOracle();\\n        _safeLockRound(currentEpoch, currentPrice);\\n\\n        currentEpoch = currentEpoch + 1;\\n        _startRound(currentEpoch);\\n        genesisLockOnce = true;\\n    }\\n\\n    function shouldExecuteRound() public view returns (bool) {\\n        return block.number >= rounds[currentEpoch].lockBlock;\\n    }\\n\\n    function currentPriceFromOracle() public view returns (int256) {\\n        ( , int256 price, , , ) = oracle.latestRoundData();\\n        return price;\\n    }\\n\\n    /**\\n     * @dev Start the next round n, lock price for round n-1, end round n-2\\n     */\\n    function executeRound() external onlyOperator whenNotPaused {\\n        require(\\n            genesisStartOnce && genesisLockOnce,\\n            'Can only run after genesisStartRound and genesisLockRound is triggered'\\n        );\\n\\n        int256 currentPrice = _getPriceFromOracle();\\n        // CurrentEpoch refers to previous round (n-1)\\n        _safeLockRound(currentEpoch, currentPrice);\\n        _safeEndRound(currentEpoch - 1, currentPrice);\\n        _calculateRewards(currentEpoch - 1);\\n\\n        // Increment currentEpoch to current round (n)\\n        currentEpoch = currentEpoch + 1;\\n        _safeStartRound(currentEpoch);\\n    }\\n\\n    /**\\n     * @dev Bet bear position\\n     */\\n    function betBear() external payable whenNotPaused notContract {\\n        require(_bettable(currentEpoch), 'Round not bettable');\\n        require(msg.value >= minBetAmount, 'Bet amount must be greater than minBetAmount');\\n        require(ledger[currentEpoch][msg.sender].amount == 0, 'Can only bet once per round');\\n\\n        // Update round data\\n        uint256 amount = msg.value;\\n        Round storage round = rounds[currentEpoch];\\n        round.totalAmount = round.totalAmount.add(amount);\\n        round.bearAmount = round.bearAmount.add(amount);\\n\\n        // Update user data\\n        BetInfo storage betInfo = ledger[currentEpoch][msg.sender];\\n        betInfo.position = Position.Bear;\\n        betInfo.amount = amount;\\n        userRounds[msg.sender].push(currentEpoch);\\n\\n        emit BetBear(msg.sender, currentEpoch, amount);\\n    }\\n\\n    /**\\n     * @dev Bet bull position\\n     */\\n    function betBull() external payable whenNotPaused notContract {\\n        require(_bettable(currentEpoch), 'Round not bettable');\\n        require(msg.value >= minBetAmount, 'Bet amount must be greater than minBetAmount');\\n        require(ledger[currentEpoch][msg.sender].amount == 0, 'Can only bet once per round');\\n\\n        // Update round data\\n        uint256 amount = msg.value;\\n        Round storage round = rounds[currentEpoch];\\n        round.totalAmount = round.totalAmount.add(amount);\\n        round.bullAmount = round.bullAmount.add(amount);\\n\\n        // Update user data\\n        BetInfo storage betInfo = ledger[currentEpoch][msg.sender];\\n        betInfo.position = Position.Bull;\\n        betInfo.amount = amount;\\n        userRounds[msg.sender].push(currentEpoch);\\n\\n        emit BetBull(msg.sender, currentEpoch, amount);\\n    }\\n\\n    /**\\n     * @dev Claim reward\\n     */\\n    function claim(uint256 epoch) external notContract {\\n        require(rounds[epoch].startBlock != 0, 'Round has not started');\\n        require(block.number > rounds[epoch].endBlock, 'Round has not ended');\\n        require(!ledger[epoch][msg.sender].claimed, 'Rewards claimed');\\n\\n        uint256 reward;\\n        // Round valid, claim rewards\\n        if (rounds[epoch].oracleCalled) {\\n            require(claimable(epoch, msg.sender), 'Not eligible for claim');\\n            Round memory round = rounds[epoch];\\n            reward = ledger[epoch][msg.sender].amount.mul(round.rewardAmount).div(round.rewardBaseCalAmount);\\n        }\\n        // Round invalid, refund bet amount\\n        else {\\n            require(refundable(epoch, msg.sender), 'Not eligible for refund');\\n            reward = ledger[epoch][msg.sender].amount;\\n        }\\n\\n        BetInfo storage betInfo = ledger[epoch][msg.sender];\\n        betInfo.claimed = true;\\n        _safeTransferBNB(address(msg.sender), reward);\\n\\n        emit Claim(msg.sender, epoch, reward);\\n    }\\n\\n    /**\\n     * @dev Claim all rewards in treasury\\n     * callable by admin\\n     */\\n    function claimTreasury() external onlyAdmin {\\n        uint256 currentTreasuryAmount = treasuryAmount;\\n        treasuryAmount = 0;\\n        _safeTransferBNB(adminAddress, currentTreasuryAmount);\\n\\n        emit ClaimTreasury(currentTreasuryAmount);\\n    }\\n\\n    /**\\n     * @dev Return round epochs that a user has participated\\n     */\\n    function getUserRounds(\\n        address user,\\n        uint256 cursor,\\n        uint256 size\\n    ) external view returns (uint256[] memory, uint256) {\\n        uint256 length = size;\\n        if (length > userRounds[user].length - cursor) {\\n            length = userRounds[user].length - cursor;\\n        }\\n\\n        uint256[] memory values = new uint256[](length);\\n        for (uint256 i = 0; i < length; i++) {\\n            values[i] = userRounds[user][cursor + i];\\n        }\\n\\n        return (values, cursor + length);\\n    }\\n\\n    /**\\n     * @dev called by the admin to pause, triggers stopped state\\n     */\\n    function pause() public onlyAdminOrOperator whenNotPaused {\\n        _pause();\\n\\n        emit Pause(currentEpoch);\\n    }\\n\\n    /**\\n     * @dev called by the admin to unpause, returns to normal state\\n     * Reset genesis state. Once paused, the rounds would need to be kickstarted by genesis\\n     */\\n    function unpause() public onlyAdmin whenPaused {\\n        genesisStartOnce = false;\\n        genesisLockOnce = false;\\n        _unpause();\\n\\n        emit Unpause(currentEpoch);\\n    }\\n\\n    /**\\n     * @dev Get the claimable stats of specific epoch and user account\\n     */\\n    function claimable(uint256 epoch, address user) public view returns (bool) {\\n        BetInfo memory betInfo = ledger[epoch][user];\\n        Round memory round = rounds[epoch];\\n        if (round.lockPrice == round.closePrice) {\\n            return false;\\n        }\\n        return\\n            round.oracleCalled &&\\n            ((round.closePrice > round.lockPrice && betInfo.position == Position.Bull) ||\\n                (round.closePrice < round.lockPrice && betInfo.position == Position.Bear));\\n    }\\n\\n    /**\\n     * @dev Get the refundable stats of specific epoch and user account\\n     */\\n    function refundable(uint256 epoch, address user) public view returns (bool) {\\n        BetInfo memory betInfo = ledger[epoch][user];\\n        Round memory round = rounds[epoch];\\n        return !round.oracleCalled && block.number > round.endBlock.add(bufferBlocks) && betInfo.amount != 0;\\n    }\\n\\n    /**\\n     * @dev Start round\\n     * Previous round n-2 must end\\n     */\\n    function _safeStartRound(uint256 epoch) internal {\\n        require(genesisStartOnce, 'Can only run after genesisStartRound is triggered');\\n        require(rounds[epoch - 2].endBlock != 0, 'Can only start round after round n-2 has ended');\\n        require(block.number >= rounds[epoch - 2].endBlock, 'Can only start new round after round n-2 endBlock');\\n        _startRound(epoch);\\n    }\\n\\n    function _startRound(uint256 epoch) internal {\\n        Round storage round = rounds[epoch];\\n        round.startBlock = block.number;\\n        round.lockBlock = block.number.add(intervalBlocks);\\n        round.endBlock = block.number.add(intervalBlocks * 2);\\n        round.epoch = epoch;\\n        round.totalAmount = 0;\\n\\n        emit StartRound(epoch, block.number);\\n    }\\n\\n    /**\\n     * @dev Lock round\\n     */\\n    function _safeLockRound(uint256 epoch, int256 price) internal {\\n        require(rounds[epoch].startBlock != 0, 'Can only lock round after round has started');\\n        require(block.number >= rounds[epoch].lockBlock, 'Can only lock round after lockBlock');\\n        require(block.number <= rounds[epoch].lockBlock.add(bufferBlocks), 'Can only lock round within bufferBlocks');\\n        _lockRound(epoch, price);\\n    }\\n\\n    function _lockRound(uint256 epoch, int256 price) internal {\\n        Round storage round = rounds[epoch];\\n        round.lockPrice = price;\\n\\n        emit LockRound(epoch, block.number, round.lockPrice);\\n    }\\n\\n    /**\\n     * @dev End round\\n     */\\n    function _safeEndRound(uint256 epoch, int256 price) internal {\\n        require(rounds[epoch].lockBlock != 0, 'Can only end round after round has locked');\\n        require(block.number >= rounds[epoch].endBlock, 'Can only end round after endBlock');\\n        require(block.number <= rounds[epoch].endBlock.add(bufferBlocks), 'Can only end round within bufferBlocks');\\n        _endRound(epoch, price);\\n    }\\n\\n    function _endRound(uint256 epoch, int256 price) internal {\\n        Round storage round = rounds[epoch];\\n        round.closePrice = price;\\n        round.oracleCalled = true;\\n\\n        emit EndRound(epoch, block.number, round.closePrice);\\n    }\\n\\n    /**\\n     * @dev Calculate rewards for round\\n     */\\n    function _calculateRewards(uint256 epoch) internal {\\n        require(rewardRate.add(treasuryRate) == TOTAL_RATE, 'rewardRate and treasuryRate must add up to TOTAL_RATE');\\n        require(rounds[epoch].rewardBaseCalAmount == 0 && rounds[epoch].rewardAmount == 0, 'Rewards calculated');\\n        Round storage round = rounds[epoch];\\n        uint256 rewardBaseCalAmount;\\n        uint256 rewardAmount;\\n        uint256 treasuryAmt;\\n        // Bull wins\\n        if (round.closePrice > round.lockPrice) {\\n            rewardBaseCalAmount = round.bullAmount;\\n            rewardAmount = round.totalAmount.mul(rewardRate).div(TOTAL_RATE);\\n            treasuryAmt = round.totalAmount.mul(treasuryRate).div(TOTAL_RATE);\\n        }\\n        // Bear wins\\n        else if (round.closePrice < round.lockPrice) {\\n            rewardBaseCalAmount = round.bearAmount;\\n            rewardAmount = round.totalAmount.mul(rewardRate).div(TOTAL_RATE);\\n            treasuryAmt = round.totalAmount.mul(treasuryRate).div(TOTAL_RATE);\\n        }\\n        // House wins\\n        else {\\n            rewardBaseCalAmount = 0;\\n            rewardAmount = 0;\\n            treasuryAmt = round.totalAmount;\\n        }\\n        round.rewardBaseCalAmount = rewardBaseCalAmount;\\n        round.rewardAmount = rewardAmount;\\n\\n        // Add to treasury\\n        treasuryAmount = treasuryAmount.add(treasuryAmt);\\n\\n        emit RewardsCalculated(epoch, rewardBaseCalAmount, rewardAmount, treasuryAmt);\\n    }\\n\\n    /**\\n     * @dev Get latest recorded price from oracle\\n     * If it falls below allowed buffer or has not updated, it would be invalid\\n     */\\n    function _getPriceFromOracle() internal returns (int256) {\\n        uint256 leastAllowedTimestamp = block.timestamp.add(oracleUpdateAllowance);\\n        (uint80 roundId, int256 price, , uint256 timestamp, ) = oracle.latestRoundData();\\n        require(timestamp <= leastAllowedTimestamp, 'Oracle update exceeded max timestamp allowance');\\n        require(roundId > oracleLatestRoundId, 'Oracle update roundId must be larger than oracleLatestRoundId');\\n        oracleLatestRoundId = uint256(roundId);\\n        return price;\\n    }\\n\\n    function _safeTransferBNB(address to, uint256 value) internal {\\n        (bool success, ) = to.call{gas: 23000, value: value}('');\\n        require(success, 'TransferHelper: BNB_TRANSFER_FAILED');\\n    }\\n\\n    function _isContract(address addr) internal view returns (bool) {\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(addr)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Determine if a round is valid for receiving bets\\n     * Round must have started and locked\\n     * Current block must be within startBlock and endBlock\\n     */\\n    function _bettable(uint256 epoch) internal view returns (bool) {\\n        return\\n            rounds[epoch].startBlock != 0 &&\\n            rounds[epoch].lockBlock != 0 &&\\n            block.number > rounds[epoch].startBlock &&\\n            block.number < rounds[epoch].lockBlock;\\n    }\\n}\\n\",\"keccak256\":\"0x65cc6720504d433807eb5e1d8f2101fa8481c90d9518cadc248b19931d5b6124\",\"license\":\"MIT\"},\"contracts/libraries/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xc7d2396c5481131099cdbc8138b2c4df45b5150edc983a78b5fd01acb1197cf2\",\"license\":\"MIT\"},\"contracts/libraries/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.4.0;\\n\\nimport './Context.sol';\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(_owner == _msgSender(), 'Ownable: caller is not the owner');\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     */\\n    function _transferOwnership(address newOwner) internal {\\n        require(newOwner != address(0), 'Ownable: new owner is the zero address');\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x702257f24af80a77b86990f29d8fc193413a5c3b9ddf8ac8f9f841199e78eef5\",\"license\":\"MIT\"},\"contracts/libraries/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport './Context.sol';\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() internal {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), 'Pausable: paused');\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), 'Pausable: not paused');\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x7d87f53a725e8b2972fd92347ccf7c29fcd77cb8f995737bc0ecbe6e5b468057\",\"license\":\"MIT\"},\"contracts/libraries/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.4.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, 'SafeMath: addition overflow');\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, 'SafeMath: subtraction overflow');\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, 'SafeMath: multiplication overflow');\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, 'SafeMath: division by zero');\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, 'SafeMath: modulo by zero');\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n\\n    function min(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = x < y ? x : y;\\n    }\\n\\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\\n    function sqrt(uint256 y) internal pure returns (uint256 z) {\\n        if (y > 3) {\\n            z = y;\\n            uint256 x = y / 2 + 1;\\n            while (x < z) {\\n                z = x;\\n                x = (y / x + x) / 2;\\n            }\\n        } else if (y != 0) {\\n            z = 1;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x1de2a24b6da5a4b2164df9a9fe8d0c16362fcb7e2aa3ddd283133da0d8d39c1a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052605a600c55600a600d556010805461ffff191690553480156200002657600080fd5b50604051620037b4380380620037b4833981810160405260e08110156200004c57600080fd5b508051602082015160408301516060840151608085015160a086015160c090960151949593949293919290919060006200008562000132565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506000805460ff60a01b19169055600a80546001600160a01b03199081166001600160a01b03998a161790915560078054821697891697909717909655600880549096169490961693909317909355600555600691909155600e55600f5562000136565b3390565b61366e80620001466000396000f3fe6080604052600436106102655760003560e01c8063821daba111610144578063cf2f5039116100b6578063e4b725161161007a578063e4b725161461085b578063ec32470314610870578063f2fde38b14610885578063f7fdec28146108b8578063fa968eea146108cd578063fc6f9468146108e257610265565b8063cf2f5039146107a4578063d0bf9c54146107ce578063d9d55eac146107f8578063dc6beed31461080d578063dd1f75961461082257610265565b80639780a752116101085780639780a752146106ba5780639e447fc6146106cf578063a067455b146106f9578063a0c7f71c14610723578063b29c299b1461075c578063b3ab15fb1461077157610265565b8063821daba1146105635780638456cb591461056b5780638c65c81f146105805780638da5cb5b1461060b578063951fd6001461062057610265565b80635c975abb116101dd5780637285c58b116101a15780637285c58b1461044e57806376671808146104b85780637adbf973146104cd5780637b0a47ee146105005780637b3205f5146105155780637bf412541461052a57610265565b80635c975abb146103b257806360554011146103c75780636c188593146103dc578063704b6c0214610406578063715018a61461043957610265565b8063127effb21161022f578063127effb2146102f15780631ec9f34b14610322578063368acb0914610349578063379607f51461035e5780633f4ba83a14610388578063452fd75a1461039d57610265565b80623bdc741461026a57806288160f1461028157806305664c34146102895780630f74174f146102b257806310c0ee64146102c7575b600080fd5b34801561027657600080fd5b5061027f6108f7565b005b61027f610999565b34801561029557600080fd5b5061029e610c53565b604080519115158252519081900360200190f35b3480156102be57600080fd5b5061029e610c6e565b3480156102d357600080fd5b5061027f600480360360208110156102ea57600080fd5b5035610c7c565b3480156102fd57600080fd5b50610306610d0f565b604080516001600160a01b039092168252519081900360200190f35b34801561032e57600080fd5b50610337610d1e565b60408051918252519081900360200190f35b34801561035557600080fd5b50610337610d24565b34801561036a57600080fd5b5061027f6004803603602081101561038157600080fd5b5035610d2a565b34801561039457600080fd5b5061027f611113565b3480156103a957600080fd5b5061027f6111fa565b3480156103be57600080fd5b5061029e6112fc565b3480156103d357600080fd5b5061033761130c565b3480156103e857600080fd5b5061027f600480360360208110156103ff57600080fd5b5035611312565b34801561041257600080fd5b5061027f6004803603602081101561042957600080fd5b50356001600160a01b031661139d565b34801561044557600080fd5b5061027f61147d565b34801561045a57600080fd5b506104876004803603604081101561047157600080fd5b50803590602001356001600160a01b0316611531565b6040518084600181111561049757fe5b81526020018381526020018215158152602001935050505060405180910390f35b3480156104c457600080fd5b50610337611560565b3480156104d957600080fd5b5061027f600480360360208110156104f057600080fd5b50356001600160a01b0316611566565b34801561050c57600080fd5b50610337611629565b34801561052157600080fd5b5061027f61162f565b34801561053657600080fd5b5061029e6004803603604081101561054d57600080fd5b50803590602001356001600160a01b031661176c565b61027f6118b8565b34801561057757600080fd5b5061027f611b6f565b34801561058c57600080fd5b506105aa600480360360208110156105a357600080fd5b5035611c68565b604080519c8d5260208d019b909b528b8b019990995260608b019790975260808a019590955260a089019390935260c088019190915260e0870152610100860152610120850152610140840152151561016083015251908190036101800190f35b34801561061757600080fd5b50610306611ccb565b34801561062c57600080fd5b5061065f6004803603606081101561064357600080fd5b506001600160a01b038135169060208101359060400135611cda565b6040518080602001838152602001828103825284818151815260200191508051906020019060200280838360005b838110156106a557818101518382015260200161068d565b50505050905001935050505060405180910390f35b3480156106c657600080fd5b50610337611dcd565b3480156106db57600080fd5b5061027f600480360360208110156106f257600080fd5b5035611dd3565b34801561070557600080fd5b5061027f6004803603602081101561071c57600080fd5b5035611eba565b34801561072f57600080fd5b5061029e6004803603604081101561074657600080fd5b50803590602001356001600160a01b0316611f0c565b34801561076857600080fd5b5061033761209a565b34801561077d57600080fd5b5061027f6004803603602081101561079457600080fd5b50356001600160a01b031661209f565b3480156107b057600080fd5b5061027f600480360360208110156107c757600080fd5b5035612162565b3480156107da57600080fd5b5061027f600480360360208110156107f157600080fd5b50356121b4565b34801561080457600080fd5b5061027f612299565b34801561081957600080fd5b5061033761245b565b34801561082e57600080fd5b506103376004803603604081101561084557600080fd5b506001600160a01b0381351690602001356124e1565b34801561086757600080fd5b5061033761250f565b34801561087c57600080fd5b50610337612515565b34801561089157600080fd5b5061027f600480360360208110156108a857600080fd5b50356001600160a01b031661251b565b3480156108c457600080fd5b5061029e61258e565b3480156108d957600080fd5b50610337612597565b3480156108ee57600080fd5b5061030661259d565b6007546001600160a01b03163314610944576040805162461bcd60e51b815260206004820152600b60248201526a61646d696e3a207775743f60a81b604482015290519081900360640190fd5b600980546000909155600754610963906001600160a01b0316826125ac565b6040805182815290517f609175abb7f12481e4f200d1ef4fc834e6caac3d9eadba42d664352f6d0932ca9181900360200190a150565b6109a16112fc565b156109e6576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6109ef33612646565b15610a38576040805162461bcd60e51b815260206004820152601460248201527318dbdb9d1c9858dd081b9bdd08185b1b1bddd95960621b604482015290519081900360640190fd5b333214610a89576040805162461bcd60e51b815260206004820152601a6024820152791c1c9bde1e4818dbdb9d1c9858dd081b9bdd08185b1b1bddd95960321b604482015290519081900360640190fd5b610a9460045461264c565b610ada576040805162461bcd60e51b8152602060048201526012602482015271526f756e64206e6f74206265747461626c6560701b604482015290519081900360640190fd5b600e54341015610b1b5760405162461bcd60e51b815260040180806020018281038252602c815260200180613419602c913960400191505060405180910390fd5b600454600090815260026020908152604080832033845290915290206001015415610b8d576040805162461bcd60e51b815260206004820152601b60248201527f43616e206f6e6c7920626574206f6e63652070657220726f756e640000000000604482015290519081900360640190fd5b60045460009081526001602052604090206006810154349190610bb090836126b8565b60068201556008810154610bc490836126b8565b600882015560048054600090815260026020908152604080832033808552908352818420805460ff191660019081178255808201899055600385528386208754815492830182559087529585902001949094559354815187815291519394909390927f0d8c1fe3e67ab767116a81f122b83c2557a8c2564019cb7c4f83de1aeb1f1f0d928290030190a3505050565b60045460009081526001602052604090206002015443101590565b601054610100900460ff1681565b6007546001600160a01b03163314610cc9576040805162461bcd60e51b815260206004820152600b60248201526a61646d696e3a207775743f60a81b604482015290519081900360640190fd5b600554811115610d0a5760405162461bcd60e51b81526004018080602001828103825260228152602001806132c26022913960400191505060405180910390fd5b600655565b6008546001600160a01b031681565b60055481565b60095481565b610d3333612646565b15610d7c576040805162461bcd60e51b815260206004820152601460248201527318dbdb9d1c9858dd081b9bdd08185b1b1bddd95960621b604482015290519081900360640190fd5b333214610dcd576040805162461bcd60e51b815260206004820152601a6024820152791c1c9bde1e4818dbdb9d1c9858dd081b9bdd08185b1b1bddd95960321b604482015290519081900360640190fd5b60008181526001602081905260409091200154610e29576040805162461bcd60e51b8152602060048201526015602482015274149bdd5b99081a185cc81b9bdd081cdd185c9d1959605a1b604482015290519081900360640190fd5b6000818152600160205260409020600301544311610e84576040805162461bcd60e51b8152602060048201526013602482015272149bdd5b99081a185cc81b9bdd08195b991959606a1b604482015290519081900360640190fd5b6000818152600260208181526040808420338552909152909120015460ff1615610ee7576040805162461bcd60e51b815260206004820152600f60248201526e14995dd85c991cc818db185a5b5959608a1b604482015290519081900360640190fd5b6000818152600160205260408120600b015460ff161561102a57610f0b8233611f0c565b610f55576040805162461bcd60e51b81526020600482015260166024820152754e6f7420656c696769626c6520666f7220636c61696d60501b604482015290519081900360640190fd5b610f5d61323c565b506000828152600160208181526040808420815161018081018352815481528185015481850152600280830154828501526003830154606083015260048301546080830152600583015460a0830152600683015460c0830152600783015460e0830152600883015461010083015260098301546101208301819052600a8401546101408401819052600b9094015460ff161515610160840152898852908552838720338852909452919094209092015491926110229261101c91612719565b90612772565b9150506110a4565b611034823361176c565b611085576040805162461bcd60e51b815260206004820152601760248201527f4e6f7420656c696769626c6520666f7220726566756e64000000000000000000604482015290519081900360640190fd5b5060008181526002602090815260408083203384529091529020600101545b6000828152600260208181526040808420338086529252909220908101805460ff19166001179055906110d790836125ac565b604080518381529051849133917f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf79181900360200190a3505050565b6007546001600160a01b03163314611160576040805162461bcd60e51b815260206004820152600b60248201526a61646d696e3a207775743f60a81b604482015290519081900360640190fd5b6111686112fc565b6111b0576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6010805461ffff191690556111c36127b4565b60045460408051918252517faaa520fdd7d2c83061d632fa017b0432407e798818af63ea908589fceda39ab79181900360200190a1565b6008546001600160a01b0316331461124a576040805162461bcd60e51b815260206004820152600e60248201526d6f70657261746f723a207775743f60901b604482015290519081900360640190fd5b6112526112fc565b15611297576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b60105460ff16156112d95760405162461bcd60e51b81526004018080602001828103825260238152602001806134eb6023913960400191505060405180910390fd5b60048054600101908190556112ed90612857565b6010805460ff19166001179055565b600054600160a01b900460ff1690565b600f5481565b6007546001600160a01b0316331461135f576040805162461bcd60e51b815260206004820152600b60248201526a61646d696e3a207775743f60a81b604482015290519081900360640190fd5b600e8190556004546040805183815290517f82480e97991520549ac4b5d0e1d97edb3bfac2666202923b6903d2a953dc76089181900360200190a250565b6113a56128de565b6000546001600160a01b03908116911614611407576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03811661145b576040805162461bcd60e51b815260206004820152601660248201527543616e6e6f74206265207a65726f206164647265737360501b604482015290519081900360640190fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6114856128de565b6000546001600160a01b039081169116146114e7576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6002602081815260009384526040808520909152918352912080546001820154919092015460ff928316921683565b60045481565b6007546001600160a01b031633146115b3576040805162461bcd60e51b815260206004820152600b60248201526a61646d696e3a207775743f60a81b604482015290519081900360640190fd5b6001600160a01b038116611607576040805162461bcd60e51b815260206004820152601660248201527543616e6e6f74206265207a65726f206164647265737360501b604482015290519081900360640190fd5b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b600c5481565b6008546001600160a01b0316331461167f576040805162461bcd60e51b815260206004820152600e60248201526d6f70657261746f723a207775743f60901b604482015290519081900360640190fd5b6116876112fc565b156116cc576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b60105460ff1680156116e55750601054610100900460ff165b6117205760405162461bcd60e51b81526004018080602001828103825260468152602001806135316046913960600191505060405180910390fd5b600061172a6128e2565b905061173860045482612a32565b61174760016004540382612b3a565b611755600160045403612c3d565b600480546001019081905561176990612e21565b50565b600061177661329f565b60008481526002602090815260408083206001600160a01b0387168452909152908190208151606081019092528054829060ff1660018111156117b557fe5b60018111156117c057fe5b81526001820154602082015260029091015460ff16151560409091015290506117e761323c565b506000848152600160208181526040928390208351610180810185528154815292810154918301919091526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015460e082015260088201546101008201526009820154610120820152600a820154610140820152600b9091015460ff16158015610160830181905261189e5750600654606082015161189b916126b8565b43115b80156118ad5750602082015115155b925050505b92915050565b6118c06112fc565b15611905576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b61190e33612646565b15611957576040805162461bcd60e51b815260206004820152601460248201527318dbdb9d1c9858dd081b9bdd08185b1b1bddd95960621b604482015290519081900360640190fd5b3332146119a8576040805162461bcd60e51b815260206004820152601a6024820152791c1c9bde1e4818dbdb9d1c9858dd081b9bdd08185b1b1bddd95960321b604482015290519081900360640190fd5b6119b360045461264c565b6119f9576040805162461bcd60e51b8152602060048201526012602482015271526f756e64206e6f74206265747461626c6560701b604482015290519081900360640190fd5b600e54341015611a3a5760405162461bcd60e51b815260040180806020018281038252602c815260200180613419602c913960400191505060405180910390fd5b600454600090815260026020908152604080832033845290915290206001015415611aac576040805162461bcd60e51b815260206004820152601b60248201527f43616e206f6e6c7920626574206f6e63652070657220726f756e640000000000604482015290519081900360640190fd5b60045460009081526001602052604090206006810154349190611acf90836126b8565b60068201556007810154611ae390836126b8565b600782015560048054600090815260026020908152604080832033808552908352818420805460ff191681556001808201899055600385528386208754815492830182559087529585902001949094559354815187815291519394909390927f438122d8cff518d18388099a5181f0d17a12b4f1b55faedf6e4a6acee0060c12928290030190a3505050565b6007546001600160a01b0316331480611b9257506008546001600160a01b031633145b611bdc576040805162461bcd60e51b815260206004820152601660248201527561646d696e207c206f70657261746f723a207775743f60501b604482015290519081900360640190fd5b611be46112fc565b15611c29576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b611c31612f12565b60045460408051918252517f68b095021b1f40fe513109f513c66692f0b3219aee674a69f4efc57badb8201d9181900360200190a1565b600160208190526000918252604090912080549181015460028201546003830154600484015460058501546006860154600787015460088801546009890154600a8a0154600b909a01549899979896979596949593949293919290919060ff168c565b6000546001600160a01b031690565b6001600160a01b038316600090815260036020526040812054606091908390859003811115611d2157506001600160a01b0385166000908152600360205260409020548490035b60608167ffffffffffffffff81118015611d3a57600080fd5b50604051908082528060200260200182016040528015611d64578160200160208202803683370190505b50905060005b82811015611dc2576001600160a01b03881660009081526003602052604090208054888301908110611d9857fe5b9060005260206000200154828281518110611daf57fe5b6020908102919091010152600101611d6a565b509694019450505050565b60065481565b6007546001600160a01b03163314611e20576040805162461bcd60e51b815260206004820152600b60248201526a61646d696e3a207775743f60a81b604482015290519081900360640190fd5b6064811115611e605760405162461bcd60e51b815260040180806020018281038252602381526020018061359a6023913960400191505060405180910390fd5b600c819055611e70606482612f9b565b600d819055600454600c54604080519182526020820193909352825191927f023010bc68e7f4c0be9887f513c570c7a0f5f511b9716abccd42bf3b8943532b92918290030190a250565b6007546001600160a01b03163314611f07576040805162461bcd60e51b815260206004820152600b60248201526a61646d696e3a207775743f60a81b604482015290519081900360640190fd5b600555565b6000611f1661329f565b60008481526002602090815260408083206001600160a01b0387168452909152908190208151606081019092528054829060ff166001811115611f5557fe5b6001811115611f6057fe5b81526001820154602082015260029091015460ff1615156040909101529050611f8761323c565b5060008481526001602081815260409283902083516101808101855281548152928101549183019190915260028101549282019290925260038201546060820152600482015460808201819052600583015460a08301819052600684015460c0840152600784015460e084015260088401546101008401526009840154610120840152600a840154610140840152600b9093015460ff16151561016083015290911415612039576000925050506118b2565b80610160015180156118ad575080608001518160a00151138015612069575060008251600181111561206757fe5b145b806118ad575080608001518160a001511280156118ad575060018251600181111561209057fe5b1495945050505050565b606481565b6007546001600160a01b031633146120ec576040805162461bcd60e51b815260206004820152600b60248201526a61646d696e3a207775743f60a81b604482015290519081900360640190fd5b6001600160a01b038116612140576040805162461bcd60e51b815260206004820152601660248201527543616e6e6f74206265207a65726f206164647265737360501b604482015290519081900360640190fd5b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6007546001600160a01b031633146121af576040805162461bcd60e51b815260206004820152600b60248201526a61646d696e3a207775743f60a81b604482015290519081900360640190fd5b600f55565b6007546001600160a01b03163314612201576040805162461bcd60e51b815260206004820152600b60248201526a61646d696e3a207775743f60a81b604482015290519081900360640190fd5b60648111156122415760405162461bcd60e51b81526004018080602001828103825260258152602001806135de6025913960400191505060405180910390fd5b61224c606482612f9b565b600c819055600d8290556004546040805192835260208301849052805191927f023010bc68e7f4c0be9887f513c570c7a0f5f511b9716abccd42bf3b8943532b929081900390910190a250565b6008546001600160a01b031633146122e9576040805162461bcd60e51b815260206004820152600e60248201526d6f70657261746f723a207775743f60901b604482015290519081900360640190fd5b6122f16112fc565b15612336576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b60105460ff166123775760405162461bcd60e51b815260040180806020018281038252603181526020018061330f6031913960400191505060405180910390fd5b601054610100900460ff16156123be5760405162461bcd60e51b81526004018080602001828103825260228152602001806133f76022913960400191505060405180910390fd5b6006546004546000908152600160205260409020600201546123df916126b8565b43111561241d5760405162461bcd60e51b81526004018080602001828103825260278152602001806134456027913960400191505060405180910390fd5b60006124276128e2565b905061243560045482612a32565b600480546001019081905561244990612857565b506010805461ff001916610100179055565b600080600a60009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156124ac57600080fd5b505afa1580156124c0573d6000803e3d6000fd5b505050506040513d60a08110156124d657600080fd5b506020015191505090565b600360205281600052604060002081815481106124fa57fe5b90600052602060002001600091509150505481565b600d5481565b600b5481565b6125236128de565b6000546001600160a01b03908116911614612585576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61176981612fdd565b60105460ff1681565b600e5481565b6007546001600160a01b031681565b6040516000906001600160a01b038416906159d890849084818181858888f193505050503d80600081146125fc576040519150601f19603f3d011682016040523d82523d6000602084013e612601565b606091505b50509050806126415760405162461bcd60e51b81526004018080602001828103825260238152602001806135776023913960400191505060405180910390fd5b505050565b3b151590565b6000818152600160208190526040822001541580159061267c575060008281526001602052604090206002015415155b801561269957506000828152600160208190526040909120015443115b80156118b2575050600090815260016020526040902060020154431090565b600082820183811015612712576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600082612728575060006118b2565b8282028284828161273557fe5b04146127125760405162461bcd60e51b81526004018080602001828103825260218152602001806134a16021913960400191505060405180910390fd5b600061271283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061307d565b6127bc6112fc565b612804576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61283a6128de565b604080516001600160a01b039092168252519081900360200190a1565b600081815260016020819052604090912043918101829055600554909161287d916126b8565b600280830191909155600554612895914391026126b8565b60038201558181556000600682015560408051438152905183917f0e5543feb86a4cd302f2b88b26c42be2d1673013a34e1f98bd6d524dd3b4ab41919081900360200190a25050565b3390565b6000806128fa600f54426126b890919063ffffffff16565b90506000806000600a60009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561294f57600080fd5b505afa158015612963573d6000803e3d6000fd5b505050506040513d60a081101561297957600080fd5b50805160208201516060909201519094509092509050838111156129ce5760405162461bcd60e51b815260040180806020018281038252602e815260200180613634602e913960400191505060405180910390fd5b600b548369ffffffffffffffffffff1611612a1a5760405162461bcd60e51b815260040180806020018281038252603d815260200180613394603d913960400191505060405180910390fd5b5069ffffffffffffffffffff909116600b5591505090565b60008281526001602081905260409091200154612a805760405162461bcd60e51b815260040180806020018281038252602b8152602001806132e4602b913960400191505060405180910390fd5b600082815260016020526040902060020154431015612ad05760405162461bcd60e51b815260040180806020018281038252602381526020018061350e6023913960400191505060405180910390fd5b600654600083815260016020526040902060020154612aee916126b8565b431115612b2c5760405162461bcd60e51b81526004018080602001828103825260278152602001806134456027913960400191505060405180910390fd5b612b36828261311f565b5050565b600082815260016020526040902060020154612b875760405162461bcd60e51b81526004018080602001828103825260298152602001806134c26029913960400191505060405180910390fd5b600082815260016020526040902060030154431015612bd75760405162461bcd60e51b81526004018080602001828103825260218152602001806135bd6021913960400191505060405180910390fd5b600654600083815260016020526040902060030154612bf5916126b8565b431115612c335760405162461bcd60e51b81526004018080602001828103825260268152602001806133d16026913960400191505060405180910390fd5b612b368282613179565b6064612c56600d54600c546126b890919063ffffffff16565b14612c925760405162461bcd60e51b815260040180806020018281038252603581526020018061346c6035913960400191505060405180910390fd5b600081815260016020526040902060090154158015612cc057506000818152600160205260409020600a0154155b612d06576040805162461bcd60e51b815260206004820152601260248201527114995dd85c991cc818d85b18dd5b185d195960721b604482015290519081900360640190fd5b600081815260016020526040812060048101546005820154919291829182911315612d775783600701549250612d50606461101c600c54876006015461271990919063ffffffff16565b9150612d70606461101c600d54876006015461271990919063ffffffff16565b9050612dba565b836004015484600501541215612dac5783600801549250612d50606461101c600c54876006015461271990919063ffffffff16565b505050600681015460009081905b6009808501849055600a850183905554612dd490826126b8565b6009556040805184815260208101849052808201839052905186917f6dfdfcb09c8804d0058826cd2539f1acfbe3cb887c9be03d928035bce0f1a58d919081900360600190a25050505050565b60105460ff16612e625760405162461bcd60e51b815260040180806020018281038252603181526020018061330f6031913960400191505060405180910390fd5b6001198101600090815260016020526040902060030154612eb45760405162461bcd60e51b815260040180806020018281038252602e815260200180613366602e913960400191505060405180910390fd5b6001198101600090815260016020526040902060030154431015612f095760405162461bcd60e51b81526004018080602001828103825260318152602001806136036031913960400191505060405180910390fd5b61176981612857565b612f1a6112fc565b15612f5f576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861283a6128de565b600061271283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506131e2565b6001600160a01b0381166130225760405162461bcd60e51b81526004018080602001828103825260268152602001806133406026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600081836131095760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156130ce5781810151838201526020016130b6565b50505050905090810190601f1680156130fb5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161311557fe5b0495945050505050565b6000828152600160209081526040918290206004810184905582514381529182018490528251909285927f482e76a65b448a42deef26e99e58fb20c85e26f075defff8df6aa80459b39006929081900390910190a2505050565b60008281526001602081815260409283902060058101859055600b8101805460ff191690931790925582514381529081018490528251919285927fb6ff1fe915db84788cbbbc017f0d2bef9485fad9fd0bd8ce9340fde0d8410dd89281900390910190a2505050565b600081848411156132345760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156130ce5781810151838201526020016130b6565b505050900390565b60405180610180016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b604080516060810190915280600081526000602082018190526040909101529056fe43616e6e6f74206265206d6f7265207468616e20696e74657276616c426c6f636b7343616e206f6e6c79206c6f636b20726f756e6420616674657220726f756e6420686173207374617274656443616e206f6e6c792072756e2061667465722067656e657369735374617274526f756e64206973207472696767657265644f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737343616e206f6e6c7920737461727420726f756e6420616674657220726f756e64206e2d322068617320656e6465644f7261636c652075706461746520726f756e644964206d757374206265206c6172676572207468616e206f7261636c654c6174657374526f756e64496443616e206f6e6c7920656e6420726f756e642077697468696e20627566666572426c6f636b7343616e206f6e6c792072756e2067656e657369734c6f636b526f756e64206f6e636542657420616d6f756e74206d7573742062652067726561746572207468616e206d696e426574416d6f756e7443616e206f6e6c79206c6f636b20726f756e642077697468696e20627566666572426c6f636b737265776172645261746520616e6420747265617375727952617465206d7573742061646420757020746f20544f54414c5f52415445536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7743616e206f6e6c7920656e6420726f756e6420616674657220726f756e6420686173206c6f636b656443616e206f6e6c792072756e2067656e657369735374617274526f756e64206f6e636543616e206f6e6c79206c6f636b20726f756e64206166746572206c6f636b426c6f636b43616e206f6e6c792072756e2061667465722067656e657369735374617274526f756e6420616e642067656e657369734c6f636b526f756e64206973207472696767657265645472616e7366657248656c7065723a20424e425f5452414e534645525f4641494c4544726577617264526174652063616e6e6f74206265206d6f7265207468616e203130302543616e206f6e6c7920656e6420726f756e6420616674657220656e64426c6f636b7472656173757279526174652063616e6e6f74206265206d6f7265207468616e203130302543616e206f6e6c79207374617274206e657720726f756e6420616674657220726f756e64206e2d3220656e64426c6f636b4f7261636c6520757064617465206578636565646564206d61782074696d657374616d7020616c6c6f77616e6365a164736f6c634300060c000a",
  "deployedBytecode": "0x6080604052600436106102655760003560e01c8063821daba111610144578063cf2f5039116100b6578063e4b725161161007a578063e4b725161461085b578063ec32470314610870578063f2fde38b14610885578063f7fdec28146108b8578063fa968eea146108cd578063fc6f9468146108e257610265565b8063cf2f5039146107a4578063d0bf9c54146107ce578063d9d55eac146107f8578063dc6beed31461080d578063dd1f75961461082257610265565b80639780a752116101085780639780a752146106ba5780639e447fc6146106cf578063a067455b146106f9578063a0c7f71c14610723578063b29c299b1461075c578063b3ab15fb1461077157610265565b8063821daba1146105635780638456cb591461056b5780638c65c81f146105805780638da5cb5b1461060b578063951fd6001461062057610265565b80635c975abb116101dd5780637285c58b116101a15780637285c58b1461044e57806376671808146104b85780637adbf973146104cd5780637b0a47ee146105005780637b3205f5146105155780637bf412541461052a57610265565b80635c975abb146103b257806360554011146103c75780636c188593146103dc578063704b6c0214610406578063715018a61461043957610265565b8063127effb21161022f578063127effb2146102f15780631ec9f34b14610322578063368acb0914610349578063379607f51461035e5780633f4ba83a14610388578063452fd75a1461039d57610265565b80623bdc741461026a57806288160f1461028157806305664c34146102895780630f74174f146102b257806310c0ee64146102c7575b600080fd5b34801561027657600080fd5b5061027f6108f7565b005b61027f610999565b34801561029557600080fd5b5061029e610c53565b604080519115158252519081900360200190f35b3480156102be57600080fd5b5061029e610c6e565b3480156102d357600080fd5b5061027f600480360360208110156102ea57600080fd5b5035610c7c565b3480156102fd57600080fd5b50610306610d0f565b604080516001600160a01b039092168252519081900360200190f35b34801561032e57600080fd5b50610337610d1e565b60408051918252519081900360200190f35b34801561035557600080fd5b50610337610d24565b34801561036a57600080fd5b5061027f6004803603602081101561038157600080fd5b5035610d2a565b34801561039457600080fd5b5061027f611113565b3480156103a957600080fd5b5061027f6111fa565b3480156103be57600080fd5b5061029e6112fc565b3480156103d357600080fd5b5061033761130c565b3480156103e857600080fd5b5061027f600480360360208110156103ff57600080fd5b5035611312565b34801561041257600080fd5b5061027f6004803603602081101561042957600080fd5b50356001600160a01b031661139d565b34801561044557600080fd5b5061027f61147d565b34801561045a57600080fd5b506104876004803603604081101561047157600080fd5b50803590602001356001600160a01b0316611531565b6040518084600181111561049757fe5b81526020018381526020018215158152602001935050505060405180910390f35b3480156104c457600080fd5b50610337611560565b3480156104d957600080fd5b5061027f600480360360208110156104f057600080fd5b50356001600160a01b0316611566565b34801561050c57600080fd5b50610337611629565b34801561052157600080fd5b5061027f61162f565b34801561053657600080fd5b5061029e6004803603604081101561054d57600080fd5b50803590602001356001600160a01b031661176c565b61027f6118b8565b34801561057757600080fd5b5061027f611b6f565b34801561058c57600080fd5b506105aa600480360360208110156105a357600080fd5b5035611c68565b604080519c8d5260208d019b909b528b8b019990995260608b019790975260808a019590955260a089019390935260c088019190915260e0870152610100860152610120850152610140840152151561016083015251908190036101800190f35b34801561061757600080fd5b50610306611ccb565b34801561062c57600080fd5b5061065f6004803603606081101561064357600080fd5b506001600160a01b038135169060208101359060400135611cda565b6040518080602001838152602001828103825284818151815260200191508051906020019060200280838360005b838110156106a557818101518382015260200161068d565b50505050905001935050505060405180910390f35b3480156106c657600080fd5b50610337611dcd565b3480156106db57600080fd5b5061027f600480360360208110156106f257600080fd5b5035611dd3565b34801561070557600080fd5b5061027f6004803603602081101561071c57600080fd5b5035611eba565b34801561072f57600080fd5b5061029e6004803603604081101561074657600080fd5b50803590602001356001600160a01b0316611f0c565b34801561076857600080fd5b5061033761209a565b34801561077d57600080fd5b5061027f6004803603602081101561079457600080fd5b50356001600160a01b031661209f565b3480156107b057600080fd5b5061027f600480360360208110156107c757600080fd5b5035612162565b3480156107da57600080fd5b5061027f600480360360208110156107f157600080fd5b50356121b4565b34801561080457600080fd5b5061027f612299565b34801561081957600080fd5b5061033761245b565b34801561082e57600080fd5b506103376004803603604081101561084557600080fd5b506001600160a01b0381351690602001356124e1565b34801561086757600080fd5b5061033761250f565b34801561087c57600080fd5b50610337612515565b34801561089157600080fd5b5061027f600480360360208110156108a857600080fd5b50356001600160a01b031661251b565b3480156108c457600080fd5b5061029e61258e565b3480156108d957600080fd5b50610337612597565b3480156108ee57600080fd5b5061030661259d565b6007546001600160a01b03163314610944576040805162461bcd60e51b815260206004820152600b60248201526a61646d696e3a207775743f60a81b604482015290519081900360640190fd5b600980546000909155600754610963906001600160a01b0316826125ac565b6040805182815290517f609175abb7f12481e4f200d1ef4fc834e6caac3d9eadba42d664352f6d0932ca9181900360200190a150565b6109a16112fc565b156109e6576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6109ef33612646565b15610a38576040805162461bcd60e51b815260206004820152601460248201527318dbdb9d1c9858dd081b9bdd08185b1b1bddd95960621b604482015290519081900360640190fd5b333214610a89576040805162461bcd60e51b815260206004820152601a6024820152791c1c9bde1e4818dbdb9d1c9858dd081b9bdd08185b1b1bddd95960321b604482015290519081900360640190fd5b610a9460045461264c565b610ada576040805162461bcd60e51b8152602060048201526012602482015271526f756e64206e6f74206265747461626c6560701b604482015290519081900360640190fd5b600e54341015610b1b5760405162461bcd60e51b815260040180806020018281038252602c815260200180613419602c913960400191505060405180910390fd5b600454600090815260026020908152604080832033845290915290206001015415610b8d576040805162461bcd60e51b815260206004820152601b60248201527f43616e206f6e6c7920626574206f6e63652070657220726f756e640000000000604482015290519081900360640190fd5b60045460009081526001602052604090206006810154349190610bb090836126b8565b60068201556008810154610bc490836126b8565b600882015560048054600090815260026020908152604080832033808552908352818420805460ff191660019081178255808201899055600385528386208754815492830182559087529585902001949094559354815187815291519394909390927f0d8c1fe3e67ab767116a81f122b83c2557a8c2564019cb7c4f83de1aeb1f1f0d928290030190a3505050565b60045460009081526001602052604090206002015443101590565b601054610100900460ff1681565b6007546001600160a01b03163314610cc9576040805162461bcd60e51b815260206004820152600b60248201526a61646d696e3a207775743f60a81b604482015290519081900360640190fd5b600554811115610d0a5760405162461bcd60e51b81526004018080602001828103825260228152602001806132c26022913960400191505060405180910390fd5b600655565b6008546001600160a01b031681565b60055481565b60095481565b610d3333612646565b15610d7c576040805162461bcd60e51b815260206004820152601460248201527318dbdb9d1c9858dd081b9bdd08185b1b1bddd95960621b604482015290519081900360640190fd5b333214610dcd576040805162461bcd60e51b815260206004820152601a6024820152791c1c9bde1e4818dbdb9d1c9858dd081b9bdd08185b1b1bddd95960321b604482015290519081900360640190fd5b60008181526001602081905260409091200154610e29576040805162461bcd60e51b8152602060048201526015602482015274149bdd5b99081a185cc81b9bdd081cdd185c9d1959605a1b604482015290519081900360640190fd5b6000818152600160205260409020600301544311610e84576040805162461bcd60e51b8152602060048201526013602482015272149bdd5b99081a185cc81b9bdd08195b991959606a1b604482015290519081900360640190fd5b6000818152600260208181526040808420338552909152909120015460ff1615610ee7576040805162461bcd60e51b815260206004820152600f60248201526e14995dd85c991cc818db185a5b5959608a1b604482015290519081900360640190fd5b6000818152600160205260408120600b015460ff161561102a57610f0b8233611f0c565b610f55576040805162461bcd60e51b81526020600482015260166024820152754e6f7420656c696769626c6520666f7220636c61696d60501b604482015290519081900360640190fd5b610f5d61323c565b506000828152600160208181526040808420815161018081018352815481528185015481850152600280830154828501526003830154606083015260048301546080830152600583015460a0830152600683015460c0830152600783015460e0830152600883015461010083015260098301546101208301819052600a8401546101408401819052600b9094015460ff161515610160840152898852908552838720338852909452919094209092015491926110229261101c91612719565b90612772565b9150506110a4565b611034823361176c565b611085576040805162461bcd60e51b815260206004820152601760248201527f4e6f7420656c696769626c6520666f7220726566756e64000000000000000000604482015290519081900360640190fd5b5060008181526002602090815260408083203384529091529020600101545b6000828152600260208181526040808420338086529252909220908101805460ff19166001179055906110d790836125ac565b604080518381529051849133917f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf79181900360200190a3505050565b6007546001600160a01b03163314611160576040805162461bcd60e51b815260206004820152600b60248201526a61646d696e3a207775743f60a81b604482015290519081900360640190fd5b6111686112fc565b6111b0576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6010805461ffff191690556111c36127b4565b60045460408051918252517faaa520fdd7d2c83061d632fa017b0432407e798818af63ea908589fceda39ab79181900360200190a1565b6008546001600160a01b0316331461124a576040805162461bcd60e51b815260206004820152600e60248201526d6f70657261746f723a207775743f60901b604482015290519081900360640190fd5b6112526112fc565b15611297576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b60105460ff16156112d95760405162461bcd60e51b81526004018080602001828103825260238152602001806134eb6023913960400191505060405180910390fd5b60048054600101908190556112ed90612857565b6010805460ff19166001179055565b600054600160a01b900460ff1690565b600f5481565b6007546001600160a01b0316331461135f576040805162461bcd60e51b815260206004820152600b60248201526a61646d696e3a207775743f60a81b604482015290519081900360640190fd5b600e8190556004546040805183815290517f82480e97991520549ac4b5d0e1d97edb3bfac2666202923b6903d2a953dc76089181900360200190a250565b6113a56128de565b6000546001600160a01b03908116911614611407576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03811661145b576040805162461bcd60e51b815260206004820152601660248201527543616e6e6f74206265207a65726f206164647265737360501b604482015290519081900360640190fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6114856128de565b6000546001600160a01b039081169116146114e7576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6002602081815260009384526040808520909152918352912080546001820154919092015460ff928316921683565b60045481565b6007546001600160a01b031633146115b3576040805162461bcd60e51b815260206004820152600b60248201526a61646d696e3a207775743f60a81b604482015290519081900360640190fd5b6001600160a01b038116611607576040805162461bcd60e51b815260206004820152601660248201527543616e6e6f74206265207a65726f206164647265737360501b604482015290519081900360640190fd5b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b600c5481565b6008546001600160a01b0316331461167f576040805162461bcd60e51b815260206004820152600e60248201526d6f70657261746f723a207775743f60901b604482015290519081900360640190fd5b6116876112fc565b156116cc576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b60105460ff1680156116e55750601054610100900460ff165b6117205760405162461bcd60e51b81526004018080602001828103825260468152602001806135316046913960600191505060405180910390fd5b600061172a6128e2565b905061173860045482612a32565b61174760016004540382612b3a565b611755600160045403612c3d565b600480546001019081905561176990612e21565b50565b600061177661329f565b60008481526002602090815260408083206001600160a01b0387168452909152908190208151606081019092528054829060ff1660018111156117b557fe5b60018111156117c057fe5b81526001820154602082015260029091015460ff16151560409091015290506117e761323c565b506000848152600160208181526040928390208351610180810185528154815292810154918301919091526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015460e082015260088201546101008201526009820154610120820152600a820154610140820152600b9091015460ff16158015610160830181905261189e5750600654606082015161189b916126b8565b43115b80156118ad5750602082015115155b925050505b92915050565b6118c06112fc565b15611905576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b61190e33612646565b15611957576040805162461bcd60e51b815260206004820152601460248201527318dbdb9d1c9858dd081b9bdd08185b1b1bddd95960621b604482015290519081900360640190fd5b3332146119a8576040805162461bcd60e51b815260206004820152601a6024820152791c1c9bde1e4818dbdb9d1c9858dd081b9bdd08185b1b1bddd95960321b604482015290519081900360640190fd5b6119b360045461264c565b6119f9576040805162461bcd60e51b8152602060048201526012602482015271526f756e64206e6f74206265747461626c6560701b604482015290519081900360640190fd5b600e54341015611a3a5760405162461bcd60e51b815260040180806020018281038252602c815260200180613419602c913960400191505060405180910390fd5b600454600090815260026020908152604080832033845290915290206001015415611aac576040805162461bcd60e51b815260206004820152601b60248201527f43616e206f6e6c7920626574206f6e63652070657220726f756e640000000000604482015290519081900360640190fd5b60045460009081526001602052604090206006810154349190611acf90836126b8565b60068201556007810154611ae390836126b8565b600782015560048054600090815260026020908152604080832033808552908352818420805460ff191681556001808201899055600385528386208754815492830182559087529585902001949094559354815187815291519394909390927f438122d8cff518d18388099a5181f0d17a12b4f1b55faedf6e4a6acee0060c12928290030190a3505050565b6007546001600160a01b0316331480611b9257506008546001600160a01b031633145b611bdc576040805162461bcd60e51b815260206004820152601660248201527561646d696e207c206f70657261746f723a207775743f60501b604482015290519081900360640190fd5b611be46112fc565b15611c29576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b611c31612f12565b60045460408051918252517f68b095021b1f40fe513109f513c66692f0b3219aee674a69f4efc57badb8201d9181900360200190a1565b600160208190526000918252604090912080549181015460028201546003830154600484015460058501546006860154600787015460088801546009890154600a8a0154600b909a01549899979896979596949593949293919290919060ff168c565b6000546001600160a01b031690565b6001600160a01b038316600090815260036020526040812054606091908390859003811115611d2157506001600160a01b0385166000908152600360205260409020548490035b60608167ffffffffffffffff81118015611d3a57600080fd5b50604051908082528060200260200182016040528015611d64578160200160208202803683370190505b50905060005b82811015611dc2576001600160a01b03881660009081526003602052604090208054888301908110611d9857fe5b9060005260206000200154828281518110611daf57fe5b6020908102919091010152600101611d6a565b509694019450505050565b60065481565b6007546001600160a01b03163314611e20576040805162461bcd60e51b815260206004820152600b60248201526a61646d696e3a207775743f60a81b604482015290519081900360640190fd5b6064811115611e605760405162461bcd60e51b815260040180806020018281038252602381526020018061359a6023913960400191505060405180910390fd5b600c819055611e70606482612f9b565b600d819055600454600c54604080519182526020820193909352825191927f023010bc68e7f4c0be9887f513c570c7a0f5f511b9716abccd42bf3b8943532b92918290030190a250565b6007546001600160a01b03163314611f07576040805162461bcd60e51b815260206004820152600b60248201526a61646d696e3a207775743f60a81b604482015290519081900360640190fd5b600555565b6000611f1661329f565b60008481526002602090815260408083206001600160a01b0387168452909152908190208151606081019092528054829060ff166001811115611f5557fe5b6001811115611f6057fe5b81526001820154602082015260029091015460ff1615156040909101529050611f8761323c565b5060008481526001602081815260409283902083516101808101855281548152928101549183019190915260028101549282019290925260038201546060820152600482015460808201819052600583015460a08301819052600684015460c0840152600784015460e084015260088401546101008401526009840154610120840152600a840154610140840152600b9093015460ff16151561016083015290911415612039576000925050506118b2565b80610160015180156118ad575080608001518160a00151138015612069575060008251600181111561206757fe5b145b806118ad575080608001518160a001511280156118ad575060018251600181111561209057fe5b1495945050505050565b606481565b6007546001600160a01b031633146120ec576040805162461bcd60e51b815260206004820152600b60248201526a61646d696e3a207775743f60a81b604482015290519081900360640190fd5b6001600160a01b038116612140576040805162461bcd60e51b815260206004820152601660248201527543616e6e6f74206265207a65726f206164647265737360501b604482015290519081900360640190fd5b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6007546001600160a01b031633146121af576040805162461bcd60e51b815260206004820152600b60248201526a61646d696e3a207775743f60a81b604482015290519081900360640190fd5b600f55565b6007546001600160a01b03163314612201576040805162461bcd60e51b815260206004820152600b60248201526a61646d696e3a207775743f60a81b604482015290519081900360640190fd5b60648111156122415760405162461bcd60e51b81526004018080602001828103825260258152602001806135de6025913960400191505060405180910390fd5b61224c606482612f9b565b600c819055600d8290556004546040805192835260208301849052805191927f023010bc68e7f4c0be9887f513c570c7a0f5f511b9716abccd42bf3b8943532b929081900390910190a250565b6008546001600160a01b031633146122e9576040805162461bcd60e51b815260206004820152600e60248201526d6f70657261746f723a207775743f60901b604482015290519081900360640190fd5b6122f16112fc565b15612336576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b60105460ff166123775760405162461bcd60e51b815260040180806020018281038252603181526020018061330f6031913960400191505060405180910390fd5b601054610100900460ff16156123be5760405162461bcd60e51b81526004018080602001828103825260228152602001806133f76022913960400191505060405180910390fd5b6006546004546000908152600160205260409020600201546123df916126b8565b43111561241d5760405162461bcd60e51b81526004018080602001828103825260278152602001806134456027913960400191505060405180910390fd5b60006124276128e2565b905061243560045482612a32565b600480546001019081905561244990612857565b506010805461ff001916610100179055565b600080600a60009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156124ac57600080fd5b505afa1580156124c0573d6000803e3d6000fd5b505050506040513d60a08110156124d657600080fd5b506020015191505090565b600360205281600052604060002081815481106124fa57fe5b90600052602060002001600091509150505481565b600d5481565b600b5481565b6125236128de565b6000546001600160a01b03908116911614612585576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61176981612fdd565b60105460ff1681565b600e5481565b6007546001600160a01b031681565b6040516000906001600160a01b038416906159d890849084818181858888f193505050503d80600081146125fc576040519150601f19603f3d011682016040523d82523d6000602084013e612601565b606091505b50509050806126415760405162461bcd60e51b81526004018080602001828103825260238152602001806135776023913960400191505060405180910390fd5b505050565b3b151590565b6000818152600160208190526040822001541580159061267c575060008281526001602052604090206002015415155b801561269957506000828152600160208190526040909120015443115b80156118b2575050600090815260016020526040902060020154431090565b600082820183811015612712576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600082612728575060006118b2565b8282028284828161273557fe5b04146127125760405162461bcd60e51b81526004018080602001828103825260218152602001806134a16021913960400191505060405180910390fd5b600061271283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061307d565b6127bc6112fc565b612804576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61283a6128de565b604080516001600160a01b039092168252519081900360200190a1565b600081815260016020819052604090912043918101829055600554909161287d916126b8565b600280830191909155600554612895914391026126b8565b60038201558181556000600682015560408051438152905183917f0e5543feb86a4cd302f2b88b26c42be2d1673013a34e1f98bd6d524dd3b4ab41919081900360200190a25050565b3390565b6000806128fa600f54426126b890919063ffffffff16565b90506000806000600a60009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561294f57600080fd5b505afa158015612963573d6000803e3d6000fd5b505050506040513d60a081101561297957600080fd5b50805160208201516060909201519094509092509050838111156129ce5760405162461bcd60e51b815260040180806020018281038252602e815260200180613634602e913960400191505060405180910390fd5b600b548369ffffffffffffffffffff1611612a1a5760405162461bcd60e51b815260040180806020018281038252603d815260200180613394603d913960400191505060405180910390fd5b5069ffffffffffffffffffff909116600b5591505090565b60008281526001602081905260409091200154612a805760405162461bcd60e51b815260040180806020018281038252602b8152602001806132e4602b913960400191505060405180910390fd5b600082815260016020526040902060020154431015612ad05760405162461bcd60e51b815260040180806020018281038252602381526020018061350e6023913960400191505060405180910390fd5b600654600083815260016020526040902060020154612aee916126b8565b431115612b2c5760405162461bcd60e51b81526004018080602001828103825260278152602001806134456027913960400191505060405180910390fd5b612b36828261311f565b5050565b600082815260016020526040902060020154612b875760405162461bcd60e51b81526004018080602001828103825260298152602001806134c26029913960400191505060405180910390fd5b600082815260016020526040902060030154431015612bd75760405162461bcd60e51b81526004018080602001828103825260218152602001806135bd6021913960400191505060405180910390fd5b600654600083815260016020526040902060030154612bf5916126b8565b431115612c335760405162461bcd60e51b81526004018080602001828103825260268152602001806133d16026913960400191505060405180910390fd5b612b368282613179565b6064612c56600d54600c546126b890919063ffffffff16565b14612c925760405162461bcd60e51b815260040180806020018281038252603581526020018061346c6035913960400191505060405180910390fd5b600081815260016020526040902060090154158015612cc057506000818152600160205260409020600a0154155b612d06576040805162461bcd60e51b815260206004820152601260248201527114995dd85c991cc818d85b18dd5b185d195960721b604482015290519081900360640190fd5b600081815260016020526040812060048101546005820154919291829182911315612d775783600701549250612d50606461101c600c54876006015461271990919063ffffffff16565b9150612d70606461101c600d54876006015461271990919063ffffffff16565b9050612dba565b836004015484600501541215612dac5783600801549250612d50606461101c600c54876006015461271990919063ffffffff16565b505050600681015460009081905b6009808501849055600a850183905554612dd490826126b8565b6009556040805184815260208101849052808201839052905186917f6dfdfcb09c8804d0058826cd2539f1acfbe3cb887c9be03d928035bce0f1a58d919081900360600190a25050505050565b60105460ff16612e625760405162461bcd60e51b815260040180806020018281038252603181526020018061330f6031913960400191505060405180910390fd5b6001198101600090815260016020526040902060030154612eb45760405162461bcd60e51b815260040180806020018281038252602e815260200180613366602e913960400191505060405180910390fd5b6001198101600090815260016020526040902060030154431015612f095760405162461bcd60e51b81526004018080602001828103825260318152602001806136036031913960400191505060405180910390fd5b61176981612857565b612f1a6112fc565b15612f5f576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861283a6128de565b600061271283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506131e2565b6001600160a01b0381166130225760405162461bcd60e51b81526004018080602001828103825260268152602001806133406026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600081836131095760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156130ce5781810151838201526020016130b6565b50505050905090810190601f1680156130fb5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161311557fe5b0495945050505050565b6000828152600160209081526040918290206004810184905582514381529182018490528251909285927f482e76a65b448a42deef26e99e58fb20c85e26f075defff8df6aa80459b39006929081900390910190a2505050565b60008281526001602081815260409283902060058101859055600b8101805460ff191690931790925582514381529081018490528251919285927fb6ff1fe915db84788cbbbc017f0d2bef9485fad9fd0bd8ce9340fde0d8410dd89281900390910190a2505050565b600081848411156132345760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156130ce5781810151838201526020016130b6565b505050900390565b60405180610180016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b604080516060810190915280600081526000602082018190526040909101529056fe43616e6e6f74206265206d6f7265207468616e20696e74657276616c426c6f636b7343616e206f6e6c79206c6f636b20726f756e6420616674657220726f756e6420686173207374617274656443616e206f6e6c792072756e2061667465722067656e657369735374617274526f756e64206973207472696767657265644f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737343616e206f6e6c7920737461727420726f756e6420616674657220726f756e64206e2d322068617320656e6465644f7261636c652075706461746520726f756e644964206d757374206265206c6172676572207468616e206f7261636c654c6174657374526f756e64496443616e206f6e6c7920656e6420726f756e642077697468696e20627566666572426c6f636b7343616e206f6e6c792072756e2067656e657369734c6f636b526f756e64206f6e636542657420616d6f756e74206d7573742062652067726561746572207468616e206d696e426574416d6f756e7443616e206f6e6c79206c6f636b20726f756e642077697468696e20627566666572426c6f636b737265776172645261746520616e6420747265617375727952617465206d7573742061646420757020746f20544f54414c5f52415445536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7743616e206f6e6c7920656e6420726f756e6420616674657220726f756e6420686173206c6f636b656443616e206f6e6c792072756e2067656e657369735374617274526f756e64206f6e636543616e206f6e6c79206c6f636b20726f756e64206166746572206c6f636b426c6f636b43616e206f6e6c792072756e2061667465722067656e657369735374617274526f756e6420616e642067656e657369734c6f636b526f756e64206973207472696767657265645472616e7366657248656c7065723a20424e425f5452414e534645525f4641494c4544726577617264526174652063616e6e6f74206265206d6f7265207468616e203130302543616e206f6e6c7920656e6420726f756e6420616674657220656e64426c6f636b7472656173757279526174652063616e6e6f74206265206d6f7265207468616e203130302543616e206f6e6c79207374617274206e657720726f756e6420616674657220726f756e64206e2d3220656e64426c6f636b4f7261636c6520757064617465206578636565646564206d61782074696d657374616d7020616c6c6f77616e6365a164736f6c634300060c000a",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "betBear()": {
        "details": "Bet bear position"
      },
      "betBull()": {
        "details": "Bet bull position"
      },
      "claim(uint256)": {
        "details": "Claim reward"
      },
      "claimTreasury()": {
        "details": "Claim all rewards in treasury callable by admin"
      },
      "claimable(uint256,address)": {
        "details": "Get the claimable stats of specific epoch and user account"
      },
      "executeRound()": {
        "details": "Start the next round n, lock price for round n-1, end round n-2"
      },
      "genesisLockRound()": {
        "details": "Lock genesis round"
      },
      "genesisStartRound()": {
        "details": "Start genesis round"
      },
      "getUserRounds(address,uint256,uint256)": {
        "details": "Return round epochs that a user has participated"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "details": "called by the admin to pause, triggers stopped state"
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "refundable(uint256,address)": {
        "details": "Get the refundable stats of specific epoch and user account"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setAdmin(address)": {
        "details": "set admin address callable by owner"
      },
      "setBufferBlocks(uint256)": {
        "details": "set buffer blocks callable by admin"
      },
      "setIntervalBlocks(uint256)": {
        "details": "set interval blocks callable by admin"
      },
      "setMinBetAmount(uint256)": {
        "details": "set minBetAmount callable by admin"
      },
      "setOperator(address)": {
        "details": "set operator address callable by admin"
      },
      "setOracle(address)": {
        "details": "set Oracle address callable by admin"
      },
      "setOracleUpdateAllowance(uint256)": {
        "details": "set oracle update allowance callable by admin"
      },
      "setRewardRate(uint256)": {
        "details": "set reward rate callable by admin"
      },
      "setTreasuryRate(uint256)": {
        "details": "set treasury rate callable by admin"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "details": "called by the admin to unpause, returns to normal state Reset genesis state. Once paused, the rounds would need to be kickstarted by genesis"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12620,
        "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 12750,
        "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
        "label": "_paused",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 94,
        "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
        "label": "rounds",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Round)80_storage)"
      },
      {
        "astId": 100,
        "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
        "label": "ledger",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(BetInfo)90_storage))"
      },
      {
        "astId": 105,
        "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
        "label": "userRounds",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 107,
        "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
        "label": "currentEpoch",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 109,
        "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
        "label": "intervalBlocks",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 111,
        "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
        "label": "bufferBlocks",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 113,
        "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
        "label": "adminAddress",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 115,
        "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
        "label": "operatorAddress",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 117,
        "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
        "label": "treasuryAmount",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 119,
        "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
        "label": "oracle",
        "offset": 0,
        "slot": "10",
        "type": "t_contract(AggregatorV3Interface)48"
      },
      {
        "astId": 121,
        "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
        "label": "oracleLatestRoundId",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 127,
        "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
        "label": "rewardRate",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 130,
        "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
        "label": "treasuryRate",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 132,
        "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
        "label": "minBetAmount",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 134,
        "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
        "label": "oracleUpdateAllowance",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 137,
        "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
        "label": "genesisStartOnce",
        "offset": 0,
        "slot": "16",
        "type": "t_bool"
      },
      {
        "astId": 140,
        "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
        "label": "genesisLockOnce",
        "offset": 1,
        "slot": "16",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorV3Interface)48": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_enum(Position)83": {
        "encoding": "inplace",
        "label": "enum BnbPricePrediction.Position",
        "numberOfBytes": "1"
      },
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_struct(BetInfo)90_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct BnbPricePrediction.BetInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(BetInfo)90_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_struct(BetInfo)90_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => struct BnbPricePrediction.BetInfo))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(BetInfo)90_storage)"
      },
      "t_mapping(t_uint256,t_struct(Round)80_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct BnbPricePrediction.Round)",
        "numberOfBytes": "32",
        "value": "t_struct(Round)80_storage"
      },
      "t_struct(BetInfo)90_storage": {
        "encoding": "inplace",
        "label": "struct BnbPricePrediction.BetInfo",
        "members": [
          {
            "astId": 85,
            "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
            "label": "position",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(Position)83"
          },
          {
            "astId": 87,
            "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
            "label": "amount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 89,
            "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
            "label": "claimed",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Round)80_storage": {
        "encoding": "inplace",
        "label": "struct BnbPricePrediction.Round",
        "members": [
          {
            "astId": 57,
            "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
            "label": "epoch",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 59,
            "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
            "label": "startBlock",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 61,
            "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
            "label": "lockBlock",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 63,
            "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
            "label": "endBlock",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 65,
            "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
            "label": "lockPrice",
            "offset": 0,
            "slot": "4",
            "type": "t_int256"
          },
          {
            "astId": 67,
            "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
            "label": "closePrice",
            "offset": 0,
            "slot": "5",
            "type": "t_int256"
          },
          {
            "astId": 69,
            "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
            "label": "totalAmount",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 71,
            "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
            "label": "bullAmount",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 73,
            "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
            "label": "bearAmount",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 75,
            "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
            "label": "rewardBaseCalAmount",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 77,
            "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
            "label": "rewardAmount",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 79,
            "contract": "contracts/BnbPricePrediction.sol:BnbPricePrediction",
            "label": "oracleCalled",
            "offset": 0,
            "slot": "11",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}